// This query matches the code from "sqlinj1.php" (and more), in any AST.

def printNode(node) {
    "Node: [\n" +
    "\"childnum\": " + node.childnum + ",\n" +
    "\"id\": " + node.id + ",\n" +
    "\"type\": " + node.type + "\n" +
    "\"code\": " + node.code + "\n" +
    "]"
}

def printFoundCC(line_start, line_end, file_name) {
    "Found a code clone on lines " + line_start + " to " + line_end + "\n" +
    "File: " + file_name
}

childnumber = 0

g.V

// filter out invalid nodes (type = NULL)
.filter{ it.type != "NULL" }

// get first - AST_ASSIGN
.filter{ isAssignment(it) }
.sideEffect{ start_linenumber = it.lineno }
.sideEffect{ childnumber = it.childnum }

// .lval().next().sideEffect{ var1 = it }.next().transform{ printNode(var1) }.next();

// get second - AST_ASSIGN
.parents()
.children().filter{ it.childnum == childnumber + 1 }
.filter{ isAssignment(it) }
.sideEffect{ childnumber = childnumber + 1 }

// get third - AST_ASSIGN, FLAG = "ASSIGN_CONCAT"
.parents()
.children().filter{ it.childnum == childnumber + 1 }
.filter{ isConcatAssignment(it) }
.sideEffect{ end_linenumber = it.lineno }
.toFile().sideEffect{ filename = it.name }
.transform{ printFoundCC(start_linenumber, end_linenumber, filename) }
