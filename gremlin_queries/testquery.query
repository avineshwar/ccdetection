def printFoundCC(line_start, line_end, file_name) {
"Found a code clone on lines " + line_start + " to " + line_end + "\n" + "File: " + file_name
}

childnumber = 0

g.V
.filter{ it.type != "NULL" }
.sideEffect{ start_linenumber = it.lineno }
.filter{ isAssignment(it) }
.filter{ it.rval().type.next() == "AST_DIM" }
.sideEffect{ user_alcohol_permitted_selection = it.lval().varToName() }
.sideEffect{ childnumber = it.childnum }
.parents()
.children().filter{ it.childnum == childnumber + 1 }

.filter{ isAssignment(it) }
.filter{ it.rval().type.next() == "AST_ENCAPS_LIST" }
.sideEffect{ query = it.lval().varToName() }
.sideEffect{ childnumber = childnumber + 1 }
.filter{ it.rval().ithChildren(0).type.next() == "string" }
.filter{ it.rval().ithChildren(1).type.next() == "AST_VAR" }
.parents()
.children().filter{ it.childnum == childnumber + 1 }

.filter{ isConcatAssignment(it) }
.filter{ it.rval().type.next() == "AST_ENCAPS_LIST" }
.filter{ it.lval().varToName().next() == query.next() }
.filter{ it.rval().ithChildren(0).type.next() == "string" }
.filter{ it.rval().ithChildren(1).type.next() == "AST_VAR" }

.sideEffect{ end_linenumber = it.lineno }
.toFile().sideEffect{ filename = it.name }
.transform{ printFoundCC(start_linenumber, end_linenumber, filename) }
